{"version":3,"sources":["components/LocationFilter.module.css","components/Location.module.css","components/ErrorMessage.module.css","components/LoadingSpinner.module.css","components/App.module.css","components/CurrentWeather.module.css","components/Forecast.module.css","utils/apiDataParser.ts","hooks/useWeatherApi.ts","components/Heading.tsx","components/LocationFilter.tsx","utils/round.ts","utils/getWeatherIcon.ts","components/CurrentWeather.tsx","components/Forecast.tsx","components/Location.tsx","components/ErrorMessage.tsx","components/LoadingSpinner.tsx","components/App.tsx","serviceWorker.ts","index.tsx","components/Heading.module.css"],"names":["module","exports","apiDataParser","locations","map","location","name","city","id","forecasts","list","forecast","dt","date","Date","dt_txt","icon","weather","temp","main","wind","speed","humidity","rain","description","locationsMap","useWeatherApi","useState","setLocations","isError","setIsError","useEffect","a","requests","axios","get","key","process","all","results","data","fetchData","Heading","className","styles","container","text","LocationFilter","setFilter","select","onChange","event","currentTarget","value","num","decimals","m","Math","pow","round","iconId","CurrentWeather","currentWeather","splitDate","toString","split","monthAndDay","time","slice","topRow","topLeft","smallText","topRight","iconContainer","src","getWeatherIcon","alt","bottomRow","bottomLeft","bottomRight","Forecast","bottomPart","Location","ErrorMessage","role","aria-label","LoadingSpinner","color","size","App","filter","content","Fragment","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,kHAAkH,OAAS,gD,mBCAzJD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,UAAY,8B,mBCAtED,EAAOC,QAAU,CAAC,UAAY,iD,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,oC,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,uB,sDCA5BD,EAAOC,QAAU,CAAC,UAAY,kHAAkH,YAAc,oCAAoC,WAAa,mCAAmC,OAAS,+BAA+B,UAAY,kCAAkC,QAAU,kEAAkE,SAAW,oGAAoG,WAAa,qEAAqE,YAAc,uGAAuG,WAAa,mCAAmC,KAAO,6EAA6E,UAAY,uEAAuE,KAAO,6EAA6E,KAAO,gD,kBCA5/BD,EAAOC,QAAU,CAAC,UAAY,4GAA4G,KAAO,4DAA4D,KAAO,sCAAsC,WAAa,6H,gJCsBxPC,EArBO,SAACC,GACrB,OAAOA,EAAUC,KAAI,SAAAC,GACnB,MAAO,CACLC,KAAMD,EAASE,KAAKD,KACpBE,GAAIH,EAASE,KAAKC,GAClBC,UAAWJ,EAASK,KAAKN,KAAI,SAACO,GAC5B,MAAO,CACLH,GAAIG,EAASC,GACbC,KAAM,IAAIC,KAAKH,EAASI,QACxBC,KAAML,EAASM,QAAQ,GAAGD,KAC1BE,KAAMP,EAASQ,KAAKD,KACpBE,KAAMT,EAASS,KAAOT,EAASS,KAAKC,MAAQ,EAC5CC,SAAUX,EAASQ,KAAKG,SACxBC,KAAMZ,EAASY,KAAOZ,EAASY,KAAK,MAAQ,EAC5CC,YAAab,EAASM,QAAQ,GAAGO,qBCNrCC,EAAgC,CACpC,CAAEnB,KAAM,WAAYE,GAAI,UACxB,CAAEF,KAAM,UAAWE,GAAI,UACvB,CAAEF,KAAM,kBAAaE,GAAI,UACzB,CAAEF,KAAM,SAAUE,GAAI,WAgCTkB,EAvBO,WAAO,IAAD,EACQC,mBAAqC,MAD7C,mBACnBxB,EADmB,KACRyB,EADQ,OAEID,oBAAS,GAFb,mBAEnBE,EAFmB,KAEVC,EAFU,KAoB1B,OAhBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DACVC,EAAWR,EAAarB,KAAI,SAAAC,GAChC,OAAO6B,IAAMC,KAbL3B,EAagBH,EAASG,GAbb4B,EAIbC,mCAHP,sDAAN,OAA6D7B,EAA7D,+BAAsF4B,KADzE,IAAC5B,EAAY4B,KAWN,kBAKMF,IAAMI,IAAIL,GALhB,YAK+B,SAAAM,GAAO,OAAIA,EAAQC,MAA1DA,EALQ,OAK2BpC,IAL3B,MAMdwB,EAAa1B,EAAcsC,IANb,gDAQdV,GAAW,GARG,yDAAH,qDAYfW,KACC,IAEI,CAAEtC,YAAW0B,Y,gBClCPa,EANC,kBACd,yBAAKC,UAAWC,IAAOC,WACrB,wBAAIF,UAAWC,IAAOE,MAAtB,mB,iBCuBWC,EAnBQ,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAW7C,EAAuB,EAAvBA,UAKnC,OACE,yBAAKwC,UAAWC,IAAOC,WACrB,4BAAQF,UAAWC,IAAOK,OAAQC,SANjB,SAACC,GACpBH,EAAUG,EAAMC,cAAcC,SAM1B,4BAAQA,MAAM,IAAd,cACClD,EAAUC,KAAI,SAAAC,GAAQ,OACrB,4BAAQ+B,IAAK/B,EAASG,GAAI6C,MAAOhD,EAASC,MACvCD,EAASC,Y,gBCpBP,WAASgD,EAAaC,GACnC,IAAMC,EAAIC,KAAKC,IAAI,GAAIH,GACvB,OAAOE,KAAKE,MAAML,EAAME,GAAKA,GCFhB,WAASI,GACtB,MAAM,mCAAN,OAA0CA,EAA1C,SC+CaC,EArCQ,SAAC,GAAqC,IAAnCvD,EAAkC,EAAlCA,KAAMwD,EAA4B,EAA5BA,eACtBjD,EAAwDiD,EAAxDjD,KAAMW,EAAkDsC,EAAlDtC,YAAaR,EAAqC8C,EAArC9C,KAAME,EAA+B4C,EAA/B5C,KAAME,EAAyB0C,EAAzB1C,KAAME,EAAmBwC,EAAnBxC,SAAUC,EAASuC,EAATvC,KACjDwC,EAAY,IAAIjD,KAAKD,GAAMmD,WAAWC,MAAM,KAC5CC,EAAW,UAAMH,EAAU,GAAhB,YAAsBA,EAAU,IAC3CI,EAAOJ,EAAU,GAAGK,MAAM,EAAG,GAEnC,OACE,yBAAKzB,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOyB,QACrB,yBAAK1B,UAAWC,IAAO0B,SACrB,yBAAK3B,UAAWC,IAAOtC,MAAOA,GAC9B,yBAAKqC,UAAWC,IAAO2B,WAAY/C,IAErC,yBAAKmB,UAAWC,IAAO4B,UACrB,yBAAK7B,UAAWC,IAAO6B,eACrB,yBAAKC,IAAKC,EAAe3D,GAAO4D,IAAI,kBAEtC,yBAAKjC,UAAWC,IAAO1B,MAAOyC,EAAMzC,EAAM,GAA1C,YAGJ,yBAAKyB,UAAWC,IAAOiC,WACrB,yBAAKlC,UAAWC,IAAOkC,YACrB,yBAAKnC,UAAWC,IAAO/B,MAAOqD,GAC9B,yBAAKvB,UAAWC,IAAO2B,WAAYJ,IAErC,yBAAKxB,UAAWC,IAAOmC,aACrB,yBAAKpC,UAAWC,IAAO2B,WAAvB,SAAyCZ,EAAMvC,EAAM,GAArD,QACA,yBAAKuB,UAAWC,IAAO2B,WAAvB,aAA6CjD,EAA7C,MACA,yBAAKqB,UAAWC,IAAO2B,WAAvB,uBACuBZ,EAAMpC,EAAM,GADnC,W,gBCJKyD,EAzBE,SAAC,GAAyB,IAAvBrE,EAAsB,EAAtBA,SACVE,EAA2CF,EAA3CE,KAAMG,EAAqCL,EAArCK,KAAME,EAA+BP,EAA/BO,KAAME,EAAyBT,EAAzBS,KAAME,EAAmBX,EAAnBW,SAAUC,EAASZ,EAATY,KACpC4C,EAAOtD,EACVmD,WACAC,MAAM,KAAK,GACXG,MAAM,EAAG,GAEZ,OACE,yBAAKzB,UAAWC,IAAOC,WACrB,6BACE,yBAAKF,UAAWC,IAAOuB,MAAOA,GAC9B,6BACE,yBAAKO,IAAKC,EAAe3D,GAAO4D,IAAI,kBAEtC,yBAAKjC,UAAWC,IAAO1B,MAAOyC,EAAMzC,EAAM,GAA1C,WAEF,yBAAKyB,UAAWC,IAAOqC,YACrB,6BAAMtB,EAAMvC,EAAM,GAAlB,QACA,6BAAME,EAAN,MACA,6BAAMqC,EAAMpC,EAAM,GAAlB,U,iBCHO2D,EAhBE,SAAC,GAAyB,IAAvB7E,EAAsB,EAAtBA,SAClB,OACE,yBAAKsC,UAAWC,IAAOC,WACrB,kBAAC,EAAD,CACEvC,KAAMD,EAASC,KACfwD,eAAgBzD,EAASI,UAAU,KAErC,yBAAKkC,UAAWC,IAAOnC,WACpBJ,EAASI,UAAU2D,MAAM,EAAG,GAAGhE,KAAI,SAAAO,GAAQ,OAC1C,kBAAC,EAAD,CAAUyB,IAAKzB,EAASH,GAAIG,SAAUA,U,iBCFjCwE,EAdM,WACnB,OACE,yBAAKxC,UAAWC,IAAOC,WACrB,0BAAMuC,KAAK,MAAMC,aAAW,aAA5B,kCAEQ,IAHV,gCAIgC,IAC9B,0BAAMD,KAAK,MAAMC,aAAW,aAA5B,oC,yBCESC,EARQ,WACrB,OACE,yBAAK3C,UAAWC,IAAOC,WACrB,kBAAC,aAAD,CAAY0C,MAAO,UAAWC,KAAK,W,iBCmC1BC,EAjCH,WAAO,IAAD,EACY9D,mBAAS,IADrB,mBACT+D,EADS,KACD1C,EADC,OAEetB,IAAvBvB,EAFQ,EAERA,UAAW0B,EAFH,EAEGA,QAuBnB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKc,UAAWC,IAAO+C,SAvBrB9D,EACK,kBAAC,EAAD,MAGJ1B,EAKH,kBAAC,IAAMyF,SAAP,KACE,kBAAC,EAAD,CAAgB5C,UAAWA,EAAW7C,UAAWA,IAChDA,EACEuF,QAAO,SAAArF,GAAQ,OAAKqF,GAAUrF,EAASC,OAASoF,KAChDtF,KAAI,SAAAC,GAAQ,OACX,kBAAC,EAAD,CAAU+B,IAAK/B,EAASG,GAAIH,SAAUA,QATrC,kBAAC,EAAD,SCPOwF,QACW,cAA7BC,OAAOzF,SAAS0F,UAEe,UAA7BD,OAAOzF,SAAS0F,UAEhBD,OAAOzF,SAAS0F,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDkI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEzInB1G,EAAOC,QAAU,CAAC,UAAY,2GAA2G,KAAO,yC","file":"static/js/main.1dc86fa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LocationFilter_container__3XbUZ colors_boxBackground__15bug borders_roundedThin__2zJ2w colors_thinBorder__1-Z03\",\"select\":\"LocationFilter_select__2CzGu fonts_s__1b6oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Location_container__1cPy4\",\"forecasts\":\"Location_forecasts__3fG0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorMessage_container__2uBmp fonts_l__2vRf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingSpinner_container__N_JQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__3R8nY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrentWeather_container__gCxV5 colors_boxBackground__15bug borders_roundedThin__2zJ2w colors_thinBorder__1-Z03\",\"partPadding\":\"CurrentWeather_partPadding__3Oy0s\",\"alignRight\":\"CurrentWeather_alignRight__1EjmM\",\"topRow\":\"CurrentWeather_topRow__xUeKW\",\"bottomRow\":\"CurrentWeather_bottomRow__1p64j\",\"topLeft\":\"CurrentWeather_topLeft__1jzT5 CurrentWeather_partPadding__3Oy0s\",\"topRight\":\"CurrentWeather_topRight__3Rj39 CurrentWeather_partPadding__3Oy0s CurrentWeather_alignRight__1EjmM\",\"bottomLeft\":\"CurrentWeather_bottomLeft__ounf0 CurrentWeather_partPadding__3Oy0s\",\"bottomRight\":\"CurrentWeather_bottomRight__1I6RN CurrentWeather_partPadding__3Oy0s CurrentWeather_alignRight__1EjmM\",\"textMargin\":\"CurrentWeather_textMargin__2k6vU\",\"name\":\"CurrentWeather_name__28ISX CurrentWeather_textMargin__2k6vU fonts_l__2vRf4\",\"smallText\":\"CurrentWeather_smallText__1xiAw fonts_s__1b6oP colors_dimText__1d8Av\",\"date\":\"CurrentWeather_date__22KrG CurrentWeather_textMargin__2k6vU fonts_m__1E-NH\",\"temp\":\"CurrentWeather_temp__2IeqF fonts_xxl__N8bSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Forecast_container__2noFK colors_boxBackground__15bug borders_roundedThin__2zJ2w colors_thinBorder__1-Z03\",\"time\":\"Forecast_time__yQnOd fonts_s__1b6oP colors_dimText__1d8Av\",\"temp\":\"Forecast_temp__2qlnm fonts_m__1E-NH\",\"bottomPart\":\"Forecast_bottomPart__3O82C fonts_xs__3LMkb colors_dimText__1d8Av colors_thinBorder__1-Z03 colors_altBoxBackground__3H-rA\"};","import LocationData from '../types/LocationData'\r\n\r\nconst apiDataParser = (locations: Array<any>): Array<LocationData> => {\r\n  return locations.map(location => {\r\n    return {\r\n      name: location.city.name,\r\n      id: location.city.id,\r\n      forecasts: location.list.map((forecast: any) => {\r\n        return {\r\n          id: forecast.dt,\r\n          date: new Date(forecast.dt_txt),\r\n          icon: forecast.weather[0].icon,\r\n          temp: forecast.main.temp,\r\n          wind: forecast.wind ? forecast.wind.speed : 0,\r\n          humidity: forecast.main.humidity,\r\n          rain: forecast.rain ? forecast.rain['3h'] : 0,\r\n          description: forecast.weather[0].description\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport default apiDataParser\r\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport LocationData from '../types/LocationData'\r\nimport apiDataParser from '../utils/apiDataParser'\r\n\r\ntype Location = {\r\n  name: string\r\n  id: string\r\n}\r\n\r\nconst locationsMap: Array<Location> = [\r\n  { name: 'Helsinki', id: '658225' },\r\n  { name: 'Tampere', id: '634964' },\r\n  { name: 'Jyväskylä', id: '655195' },\r\n  { name: 'Kuopio', id: '650225' }\r\n]\r\n\r\nconst getUrl = (id: string, key: string): string => {\r\n  return `http://api.openweathermap.org/data/2.5/forecast?id=${id}&units=metric&APPID=${key}`\r\n}\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY || ''\r\n\r\nconst useWeatherApi = () => {\r\n  const [locations, setLocations] = useState<Array<LocationData> | null>(null)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const requests = locationsMap.map(location => {\r\n        return axios.get(getUrl(location.id, apiKey))\r\n      })\r\n      try {\r\n        const data = (await axios.all(requests)).map(results => results.data)\r\n        setLocations(apiDataParser(data))\r\n      } catch (error) {\r\n        setIsError(true)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  return { locations, isError }\r\n}\r\n\r\nexport default useWeatherApi\r\n","import React from 'react'\r\nimport styles from './Heading.module.css'\r\n\r\nconst Heading = () => (\r\n  <div className={styles.container}>\r\n    <h1 className={styles.text}>Weather Radar</h1>\r\n  </div>\r\n)\r\n\r\nexport default Heading\r\n","import React from 'react'\r\nimport LocationData from '../types/LocationData'\r\nimport styles from './LocationFilter.module.css'\r\n\r\ntype Props = {\r\n  setFilter: React.Dispatch<string>\r\n  locations: Array<LocationData>\r\n}\r\n\r\nconst LocationFilter = ({ setFilter, locations }: Props) => {\r\n  const handleChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    setFilter(event.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <select className={styles.select} onChange={handleChange}>\r\n        <option value=\"\">All Cities</option>\r\n        {locations.map(location => (\r\n          <option key={location.id} value={location.name}>\r\n            {location.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationFilter\r\n","export default function(num: number, decimals: number): number {\r\n  const m = Math.pow(10, decimals)\r\n  return Math.round(num * m) / m\r\n}\r\n","export default function(iconId: string): string {\r\n  return `http://openweathermap.org/img/w/${iconId}.png`\r\n}\r\n","import React from 'react'\r\nimport ForecastData from '../types/ForeCastData'\r\nimport styles from './CurrentWeather.module.css'\r\nimport round from '../utils/round'\r\nimport getWeatherIcon from '../utils/getWeatherIcon'\r\n\r\ntype Props = {\r\n  name: string\r\n  currentWeather: ForecastData\r\n}\r\n\r\nconst CurrentWeather = ({ name, currentWeather }: Props) => {\r\n  const { date, description, icon, temp, wind, humidity, rain } = currentWeather\r\n  const splitDate = new Date(date).toString().split(' ')\r\n  const monthAndDay = `${splitDate[1]} ${splitDate[2]}`\r\n  const time = splitDate[4].slice(0, 5)\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.topRow}>\r\n        <div className={styles.topLeft}>\r\n          <div className={styles.name}>{name}</div>\r\n          <div className={styles.smallText}>{description}</div>\r\n        </div>\r\n        <div className={styles.topRight}>\r\n          <div className={styles.iconContainer}>\r\n            <img src={getWeatherIcon(icon)} alt=\"Weather icon\" />\r\n          </div>\r\n          <div className={styles.temp}>{round(temp, 0)} °C</div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.bottomRow}>\r\n        <div className={styles.bottomLeft}>\r\n          <div className={styles.date}>{monthAndDay}</div>\r\n          <div className={styles.smallText}>{time}</div>\r\n        </div>\r\n        <div className={styles.bottomRight}>\r\n          <div className={styles.smallText}>Wind: {round(wind, 1)} m/s</div>\r\n          <div className={styles.smallText}>Humidity: {humidity} %</div>\r\n          <div className={styles.smallText}>\r\n            Precipitation (3h): {round(rain, 1)} mm\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React from 'react'\r\nimport ForecastData from '../types/ForeCastData'\r\nimport styles from './Forecast.module.css'\r\nimport round from '../utils/round'\r\nimport getWeatherIcon from '../utils/getWeatherIcon'\r\n\r\ntype Props = {\r\n  forecast: ForecastData\r\n}\r\n\r\nconst Forecast = ({ forecast }: Props) => {\r\n  const { date, icon, temp, wind, humidity, rain } = forecast\r\n  const time = date\r\n    .toString()\r\n    .split(' ')[4]\r\n    .slice(0, 5)\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>\r\n        <div className={styles.time}>{time}</div>\r\n        <div>\r\n          <img src={getWeatherIcon(icon)} alt=\"Weather icon\" />\r\n        </div>\r\n        <div className={styles.temp}>{round(temp, 0)} °C</div>\r\n      </div>\r\n      <div className={styles.bottomPart}>\r\n        <div>{round(wind, 1)} m/s</div>\r\n        <div>{humidity} %</div>\r\n        <div>{round(rain, 1)} mm</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Forecast\r\n","import React from 'react'\r\nimport CurrentWeather from './CurrentWeather'\r\nimport Forecast from './Forecast'\r\nimport LocationData from '../types/LocationData'\r\nimport styles from './Location.module.css'\r\n\r\ntype Props = {\r\n  location: LocationData\r\n}\r\n\r\nconst Location = ({ location }: Props) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <CurrentWeather\r\n        name={location.name}\r\n        currentWeather={location.forecasts[0]}\r\n      />\r\n      <div className={styles.forecasts}>\r\n        {location.forecasts.slice(1, 6).map(forecast => (\r\n          <Forecast key={forecast.id} forecast={forecast} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Location\r\n","import React from 'react'\r\nimport styles from './ErrorMessage.module.css'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <span role=\"img\" aria-label=\"Developer\">\r\n        👩‍💻\r\n      </span>{' '}\r\n      Oops, something went wrong...{' '}\r\n      <span role=\"img\" aria-label=\"Developer\">\r\n        👨‍💻\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from 'react'\r\nimport { ClipLoader } from 'react-spinners'\r\nimport styles from './LoadingSpinner.module.css'\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <ClipLoader color={'#12dddd'} size=\"80px\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner\r\n","import React, { useState } from 'react'\r\nimport useWeatherApi from '../hooks/useWeatherApi'\r\nimport Heading from './Heading'\r\nimport LocationFilter from './LocationFilter'\r\nimport Location from './Location'\r\nimport ErrorMessage from './ErrorMessage'\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport styles from './App.module.css'\r\n\r\nconst App = () => {\r\n  const [filter, setFilter] = useState('')\r\n  const { locations, isError } = useWeatherApi()\r\n\r\n  const returnContent = () => {\r\n    if (isError) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    if (!locations) {\r\n      return <LoadingSpinner />\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <LocationFilter setFilter={setFilter} locations={locations} />\r\n        {locations\r\n          .filter(location => !filter || location.name === filter)\r\n          .map(location => (\r\n            <Location key={location.id} location={location} />\r\n          ))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Heading />\r\n      <div className={styles.content}>{returnContent()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Heading_container__3MR99 colors_boxBackground__15bug borders_roundedThin__2zJ2w colors_thinBorder__1-Z03\",\"text\":\"Heading_text__2I-0z fonts_xl__3c9_9\"};"],"sourceRoot":""}